出典: フリー百科事典『ウィキペディア（Wikipedia）』 移動: ナビゲーション, 検索 Portable C Compiler (略して pcc) はベル研究所の Stephen C. Johnson が 1970 年代に書いた C言語コンパイラである [1]。異なるアーキテクチャ用のコードを出力することが容易なコンパイラの先駆けであり、1980 年代初期には多くの C コンパイラが pcc をもとにしていた [2]。Version 7 Unix でデニス・リッチーのコンパイラに代わって採用されたあとは、1990 年の 4.3BSD-Reno に含まれるなど、4.4BSD で GNU C コンパイラに取って代わられるまで、長く標準コンパイラとして君臨していた。pcc の成功の鍵は移植性と診断能力にある。ソースファイルの大部分がマシン非依存である。文法違反に強く、不正なプログラムを受け付けない。lint はもともと pcc の一部だった。pass1 の時点でも最適化する。 こうした特徴を持つコンパイラは当時としては斬新で、たとえば デニス・リッチー による最初の C コンパイラは PDP-11 にべったり依存していた。なお、pcc は Alan Snyder による別の portable C compiler からアイディアを取り入れているが、Snyder のものは遅く複雑で、実装上の問題もあった。目次 1 現在2 関連項目3 参考文献4 外部リンク    [編集] 現在近年では Anders Magnusson が C99 対応を目指して開発を続けており、2007年9月には NetBSD の pkgsrc と OpenBSD のソースツリーに導入された [1]。どちらもまだ標準コンパイラとして利用しているわけではないが、GCC より軽量でメンテナンスしやすく、BSD ライセンスであることから、関心が高まっている[2]。利用者の観点から GCC と比較すると、以下の大きな違いがある。これは両者の目標とするものが異なるためである。pcc 自体が小さく、ビルドしやすい。移植も容易である。pcc 自体の動作が高速である。出力されるコードが大きく、遅い。GCC は各種最適化に優れている。 [編集] 関連項目clang [編集] 参考文献Johnson, S.C. (1978). "A portable compiler: theory and practice". Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages. Tucson, Arizona. pp. 97-104. Online reprint at ACM.Ritchie, Dennis M. (1993). "The development of the C language". The second ACM SIGPLAN conference on History of programming languages. Cambridge, Massachusetts. pp. 201-208. Online reprint.Snyder, A. (1975). "A Portable Compiler for the Language C". Master’s Thesis. M.I.T., Cambridge, Mass. Online reprint.Johnson, S.C. (1981). "A Tour Through the Portable C Compiler". Unix Programmer's Manual, 7th edition, Volume 2, ISBN 0-03-061743-X. Online version. (mirror) ^ 'CVS: cvs.openbsd.org: src' - MARC^ Slashdot | GCC Compiler Finally Supplanted by PCC? [編集] 外部リンク初期のソースコードAnders Magnusson 版の PCC サイトBSD Licensed PCC Compiler Imported, OpenBSD Journalスラッシュドット ジャパン | OpenBSD が PCC をソースツリーに投入  「http://ja.wikipedia.org/wiki/Portable_C_Compiler」より作成カテゴリ: C言語 | コンパイラ 